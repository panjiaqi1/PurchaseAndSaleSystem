<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.GoodMapper">

    <resultMap id="goodResultMap" type="com.example.demo.entity.Good">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="stock" column="stock"/>
        <association property="unit" javaType="Unit">
            <id property="id" column="c_id"/>
            <result property="name" column="c_name"/>
        </association>
    </resultMap>

    <select id="findAll" resultMap="goodResultMap" parameterType="org.springframework.data.domain.Pageable"
            resultType="Good">
        SELECT good.id,
            good.description,
            good.`name`,
            good.stock,
            good.unit_id AS c_id,
            unit.`name` AS c_name
        FROM good LEFT OUTER JOIN unit ON good.unit_id = unit.id
        <where>
            <if test="name != null ">
                good.`name` like "%"#{name,jdbcType=VARCHAR}"%"
            </if>
        </where>
        <if test="pageable != null">
            <bind name="size" value="pageable.getPageSize()"/>
            <if test="pageable.sort != null">
                <foreach collection="pageable.sort" item="sort" index="index">
                    <if test="index == 0">
                        order by
                    </if>
                    <if test="index > 0">
                        ,
                    </if>
                    ${sort.property} ${sort.direction.name}
                </foreach>
            </if>
            limit #{pageable.offset} , ${size}
        </if>
    </select>

    <select id="findById" resultMap="goodResultMap">
        SELECT good.id,
            good.description,
            good.`name`,
            good.stock,
            good.unit_id AS c_id,
            unit.`name` AS c_name
        FROM good LEFT OUTER JOIN unit ON good.unit_id = unit.id
        WHERE good.id = #{id,jdbcType=INTEGER};
    </select>


    <insert id="save" parameterType="com.example.demo.entity.Good">
        insert into good (name, description, unit_id)
        values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},#{unitId,jdbcType=INTEGER})
    </insert>

</mapper>